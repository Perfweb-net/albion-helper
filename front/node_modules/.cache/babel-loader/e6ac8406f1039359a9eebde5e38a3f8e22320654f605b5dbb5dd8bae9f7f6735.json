{"ast":null,"code":"var _jsxFileName = \"/Users/psaugues/projet/symfony/albion-helper/front/src/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from './api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // Le nom du composant commence par une majuscule\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Vérifiez si le token est présent dans le localStorage\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login'); // Rediriger vers la page login si non authentifié\n    }\n\n    // Récupérer les tâches depuis l'API\n    api.get('/').then(response => setTasks(response.data)).catch(error => console.error('Error fetching tasks:', error));\n  }, [navigate]);\n  const addTask = () => {\n    if (!newTask) return; // Ne rien faire si le champ est vide\n    api.post('', {\n      title: newTask\n    }).then(() => {\n      setNewTask('');\n      // Mettre à jour la liste des tâches après l'ajout\n      api.get('').then(response => setTasks(response.data)).catch(error => console.error('Error fetching tasks:', error));\n    }).catch(error => console.error('Error adding task:', error));\n  };\n  const deleteTask = id => {\n    api.delete(`/${id}`).then(() => {\n      // Mettre à jour la liste des tâches après la suppression\n      setTasks(tasks.filter(task => task.id !== id));\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n  const handleLogout = () => {\n    // Supprimer le token de localStorage lors de la déconnexion\n    localStorage.removeItem('token');\n    navigate('/'); // Rediriger vers la page de login\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleLogout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newTask,\n      onChange: e => setNewTask(e.target.value),\n      placeholder: \"New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [task.title, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, task.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"DNGtfwlLsQk4PgT3k2NofBtQLBg=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard; // Le nom du composant doit aussi être en majuscule ici\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","api","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","newTask","setNewTask","navigate","token","localStorage","getItem","get","then","response","data","catch","error","console","addTask","post","title","deleteTask","id","delete","filter","task","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","placeholder","map","_c","$RefreshReg$"],"sources":["/Users/psaugues/projet/symfony/albion-helper/front/src/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from './api';\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {  // Le nom du composant commence par une majuscule\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState('');\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        // Vérifiez si le token est présent dans le localStorage\n        const token = localStorage.getItem('token');\n        if (!token) {\n            navigate('/login'); // Rediriger vers la page login si non authentifié\n        }\n\n        // Récupérer les tâches depuis l'API\n        api.get('/')\n            .then((response) => setTasks(response.data))\n            .catch((error) => console.error('Error fetching tasks:', error));\n    }, [navigate]);\n\n    const addTask = () => {\n        if (!newTask) return; // Ne rien faire si le champ est vide\n        api.post('', { title: newTask })\n            .then(() => {\n                setNewTask('');\n                // Mettre à jour la liste des tâches après l'ajout\n                api.get('')\n                    .then((response) => setTasks(response.data))\n                    .catch((error) => console.error('Error fetching tasks:', error));\n            })\n            .catch((error) => console.error('Error adding task:', error));\n    };\n\n    const deleteTask = (id) => {\n        api.delete(`/${id}`)\n            .then(() => {\n                // Mettre à jour la liste des tâches après la suppression\n                setTasks(tasks.filter((task) => task.id !== id));\n            })\n            .catch((error) => console.error('Error deleting task:', error));\n    };\n\n    const handleLogout = () => {\n        // Supprimer le token de localStorage lors de la déconnexion\n        localStorage.removeItem('token');\n        navigate('/'); // Rediriger vers la page de login\n    };\n\n    return (\n        <div>\n            <h1>Task Manager</h1>\n            <button onClick={handleLogout}>Logout</button>\n            <input\n                value={newTask}\n                onChange={(e) => setNewTask(e.target.value)}\n                placeholder=\"New Task\"\n            />\n            <button onClick={addTask}>Add Task</button>\n            <ul>\n                {tasks.map((task) => (\n                    <li key={task.id}>\n                        {task.title}\n                        <button onClick={() => deleteTask(task.id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default Dashboard;  // Le nom du composant doit aussi être en majuscule ici\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}