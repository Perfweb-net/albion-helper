{"ast":null,"code":"import axios from 'axios';\nconst api = axios.create({\n  baseURL: 'http://localhost:8000/api',\n  // Remplacez par l'URL de votre API\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Ajoutez un intercepteur pour ajouter le token dans les headers\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token'); // Ou utilisez sessionStorage\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","error","Promise","reject"],"sources":["/Users/psaugues/projet/symfony/albion-helper/front/src/authApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'http://localhost:8000/api', // Remplacez par l'URL de votre API\n    headers: {\n        'Content-Type': 'application/json',\n    },\n});\n\n// Ajoutez un intercepteur pour ajouter le token dans les headers\napi.interceptors.request.use(\n    (config) => {\n        const token = localStorage.getItem('token'); // Ou utilisez sessionStorage\n        if (token) {\n            config.headers['Authorization'] = `Bearer ${token}`;\n        }\n        return config;\n    },\n    (error) => Promise.reject(error)\n);\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAM,CAAC;EACrBC,OAAO,EAAE,2BAA2B;EAAE;EACtCC,OAAO,EAAE;IACL,cAAc,EAAE;EACpB;AACJ,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACvBC,MAAM,IAAK;EACR,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC;EAC7C,IAAIF,KAAK,EAAE;IACPD,MAAM,CAACJ,OAAO,CAAC,eAAe,CAAC,GAAG,UAAUK,KAAK,EAAE;EACvD;EACA,OAAOD,MAAM;AACjB,CAAC,EACAI,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACnC,CAAC;AAED,eAAeX,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}