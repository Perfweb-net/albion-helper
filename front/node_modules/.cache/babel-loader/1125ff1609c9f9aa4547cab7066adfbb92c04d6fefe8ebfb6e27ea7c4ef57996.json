{"ast":null,"code":"var _jsxFileName = \"/Users/psaugues/projet/symfony/albion-helper/front/src/Dashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport api from './api';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  // Le nom du composant commence par une majuscule\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState('');\n  const navigate = useNavigate();\n  const addTask = () => {\n    if (!newTask) return; // Ne rien faire si le champ est vide\n    api.post('', {\n      title: newTask\n    }).then(() => {\n      setNewTask('');\n      // Mettre à jour la liste des tâches après l'ajout\n      api.get('').then(response => setTasks(response.data)).catch(error => console.error('Error fetching tasks:', error));\n    }).catch(error => console.error('Error adding task:', error));\n  };\n  const deleteTask = id => {\n    api.delete(`/${id}`).then(() => {\n      // Mettre à jour la liste des tâches après la suppression\n      setTasks(tasks.filter(task => task.id !== id));\n    }).catch(error => console.error('Error deleting task:', error));\n  };\n  const handleLogout = () => {\n    // Supprimer le token de localStorage lors de la déconnexion\n    localStorage.removeItem('token');\n    navigate('/'); // Rediriger vers la page de login\n  };\n  console.log(localStorage.getItem('token'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"dashboard\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"663N8xOLOIsbBBYfXnb+grGInrk=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard; // Le nom du composant doit aussi être en majuscule ici\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","api","useNavigate","jsxDEV","_jsxDEV","Dashboard","_s","tasks","setTasks","newTask","setNewTask","navigate","addTask","post","title","then","get","response","data","catch","error","console","deleteTask","id","delete","filter","task","handleLogout","localStorage","removeItem","log","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/psaugues/projet/symfony/albion-helper/front/src/Dashboard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport api from './api';\nimport { useNavigate } from 'react-router-dom';\n\nconst Dashboard = () => {  // Le nom du composant commence par une majuscule\n    const [tasks, setTasks] = useState([]);\n    const [newTask, setNewTask] = useState('');\n    const navigate = useNavigate();\n\n    const addTask = () => {\n        if (!newTask) return; // Ne rien faire si le champ est vide\n        api.post('', { title: newTask })\n            .then(() => {\n                setNewTask('');\n                // Mettre à jour la liste des tâches après l'ajout\n                api.get('')\n                    .then((response) => setTasks(response.data))\n                    .catch((error) => console.error('Error fetching tasks:', error));\n            })\n            .catch((error) => console.error('Error adding task:', error));\n    };\n\n    const deleteTask = (id) => {\n        api.delete(`/${id}`)\n            .then(() => {\n                // Mettre à jour la liste des tâches après la suppression\n                setTasks(tasks.filter((task) => task.id !== id));\n            })\n            .catch((error) => console.error('Error deleting task:', error));\n    };\n\n    const handleLogout = () => {\n        // Supprimer le token de localStorage lors de la déconnexion\n        localStorage.removeItem('token');\n        navigate('/'); // Rediriger vers la page de login\n    };\n\n    console.log(localStorage.getItem('token'));\n\n    return (\n        <div>\n            dashboard\n        </div>\n    );\n};\n\nexport default Dashboard;  // Le nom du composant doit aussi être en majuscule ici\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,OAAO;AACvB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAAG;EACvB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMY,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,OAAO,GAAGA,CAAA,KAAM;IAClB,IAAI,CAACH,OAAO,EAAE,OAAO,CAAC;IACtBR,GAAG,CAACY,IAAI,CAAC,EAAE,EAAE;MAAEC,KAAK,EAAEL;IAAQ,CAAC,CAAC,CAC3BM,IAAI,CAAC,MAAM;MACRL,UAAU,CAAC,EAAE,CAAC;MACd;MACAT,GAAG,CAACe,GAAG,CAAC,EAAE,CAAC,CACND,IAAI,CAAEE,QAAQ,IAAKT,QAAQ,CAACS,QAAQ,CAACC,IAAI,CAAC,CAAC,CAC3CC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;IACxE,CAAC,CAAC,CACDD,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC,CAAC;EACrE,CAAC;EAED,MAAME,UAAU,GAAIC,EAAE,IAAK;IACvBtB,GAAG,CAACuB,MAAM,CAAC,IAAID,EAAE,EAAE,CAAC,CACfR,IAAI,CAAC,MAAM;MACR;MACAP,QAAQ,CAACD,KAAK,CAACkB,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACH,EAAE,KAAKA,EAAE,CAAC,CAAC;IACpD,CAAC,CAAC,CACDJ,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACvE,CAAC;EAED,MAAMO,YAAY,GAAGA,CAAA,KAAM;IACvB;IACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChClB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EACnB,CAAC;EAEDU,OAAO,CAACS,GAAG,CAACF,YAAY,CAACG,OAAO,CAAC,OAAO,CAAC,CAAC;EAE1C,oBACI3B,OAAA;IAAA4B,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEd,CAAC;AAAC9B,EAAA,CAxCID,SAAS;EAAA,QAGMH,WAAW;AAAA;AAAAmC,EAAA,GAH1BhC,SAAS;AA0Cf,eAAeA,SAAS,CAAC,CAAE;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}